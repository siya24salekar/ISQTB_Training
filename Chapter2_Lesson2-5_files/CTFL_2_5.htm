<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0065)http://www.testing4success.com/Training/CTFL_Course/CTFL_2_5.html -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML 
xmlns="http://www.w3.org/1999/xhtml"><HEAD>
<META content="text/html; charset=utf-8" http-equiv="Content-Type">
<TITLE>www.Testing4Success.com - Software Testing Training</TITLE>
<META name="description" content="Software Testing Training Solutions from testing4Success.com">
<META name="keywords" content="iseb,istqb,software testing training">
<META name="robots" content="index,follow">
<SCRIPT language="JavaScript" src="CTFL_2_5_files/testing4success.js">
</SCRIPT>
<TITLE>(Type a title for your page here)</TITLE>
<STYLE type="text/css">
div {

left: 350px;
top: 20px;
width: 180px;
padding: 10px;
color: Black;
display: none;
}


body {
-moz-user-select: none;}


.style13 {
	font-family: Arial;
	font-weight: bold;
	font-size: medium;
	color: #000000;
	background-image: url('puzzlesmall11.jpg');
}
.style5 {
	font-size: small;
}
.style1 {
	font-family: Arial;
	font-size: small;
	font-weight:normal
}
.style12 {
	text-align: center;
	white-space: nowrap;
}
.style15 {
	text-align: left;
	white-space: nowrap;
}
.style17 {
	text-align: left;
}
.style18 {
	color: #739C21;
}
.style19 {
	font-family: Arial;
	font-size: small;
}
.style21 {
	font-family: Arial;
	font-size: small;
	text-align: left;
	color: #CCCCCC;
	margin-left: 28px;
	font-weight: normal;
}
.style22 {
	font-family: Arial;
	font-size: small;
	text-align: left;
	color: #739C21;
	margin-left: 20px;
	margin-top: 0;
}
.style23 {
	font-family: Arial;
	font-weight: bold;
	font-size: small;
	color: #739C21;
}
.style24 {
	margin-left: 6px;
}
.style25 {
	text-align: center;
	white-space: nowrap;
	font-weight: bold;
	font-family: Arial;
	font-size: small;
	color: #739C21;
}
.style26 {
	text-align: center;
	font-family: Arial;
	font-size: x-small;
}
.style27 {
	font-family: "Times New Roman";
}
.style28 {
	font-family: Arial;
	font-weight: bold;
	font-size: small;
	color: #739C21;
	margin-bottom: 20px;
}
.style29 {
	margin-top: 12px;
}
.style30 {
	border-width: 0px;
}
.style34 {
	font-weight: bold;
	border-width: 0px;
}
.style36 {
	white-space: normal;
}
.style39 {
	font-family: Arial;
	font-weight: bold;
	font-size: small;
	margin-bottom: 20px;
}
.style54 {
	font-family: Arial;
}
.style55 {
	text-align: justify;
	margin-top: 0;
	margin-bottom: 0;
}
</STYLE>

<META name="GENERATOR" content="MSHTML 9.00.8112.16506"></HEAD>
<BODY oncontextmenu="return false;">
<SCRIPT>document.onselectstart= function() {return false;}; </SCRIPT>
<B>
<TABLE style="width: 800px;" align="center">
  <TBODY>
  <TR>
    <TD style="height: 103px;" class="style13" colSpan="2">
      <P class="style22"><A href="http://www.testing4success.com/"><IMG class="style30" 
      alt="" src="CTFL_2_5_files/bannernew.png" width="235" height="38"></A></P>
      <P class="style21">ISEB / ISTQB Foundation in Software Testing Training 
      Course</P></TD></TR>
  <TR>
    <TD style="width: 120px; height: 30px;" vAlign="top">		&nbsp;</TD>
    <TD style="height: 30px;" class="style23" vAlign="bottom">		&nbsp;</TD></TR>
  <TR>
    <TD style="width: 120px;" vAlign="top"><B><IMG alt="" src="CTFL_2_5_files/Fotolia_4811872_XS.jpg" 
      width="90" height="120"></B></TD>
    <TD><SPAN class="style5">
      <P class="style28"><STRONG>Lesson 2-5</STRONG></P></SPAN>
      <P class="style28"></P>
      <P class="style39"><FONT class="style5" size="2"><B>		Integration 
      Testing</B></FONT></P><FONT class="style5" size="2">
      <P class="style1" align="JUSTIFY">Integration testing  Integration testing 
      is used to test the interfaces that exist between components, and their 
      interactions with other parts of the system. The ‘other parts’ could be 
      the operating system, specific hardware, the file system, or eve 
      interfaces between entire systems. Integration testing is often considered 
      as a logical extension of component testing. </P>
      <P class="style1" align="JUSTIFY">A simple example of Integration testing 
      is where two components have been developed (and tested) which are then 
      combined to form a simple system (or part of). The interfaces between them 
      are now tested. The basic idea is that combinations of components and 
      their interfaces are tested with the aim to gradually build up the system 
      to its complete working state. By performing this gradual incremental 
      process, any issues found can be isolated quickly to a specific 
      interface/component, thus preventing a ‘Big Bang’ situation where 
      everything is tested at the end.</P>
      <P class="style1" align="JUSTIFY">During each phase of integration, the 
      testing will be focused on the integration and not on issues related to 
      the individual components functionality. Integration testing may also 
      include non-functional testing such as performance.</P>
      <P class="style1" align="JUSTIFY">Three popular Integration strategies of 
      testing are:</P>
      <P class="style1" align="JUSTIFY"><STRONG>Top-Down</STRONG></P>
      <P class="style1" align="JUSTIFY">Approach: </P>
      <P class="style1" align="JUSTIFY">Tests the highest level components first
      </P>
      <P class="style1" align="JUSTIFY">Positive: </P>
      <P class="style1" align="JUSTIFY">The top-down approach to integration 
      testing requires the highest-level modules be test and integrated 
      first.</P>
      <P class="style1" align="JUSTIFY">Negative: </P>
      <P class="style1" align="JUSTIFY">However, the need for stubs complicates 
      test management and low-level utilities are tested relatively late in the 
      development cycle. Another disadvantage of top-down integration testing is 
      its poor support for early release of limited functionality.</P>
      <P class="style1" align="JUSTIFY">&nbsp;</P>
      <P class="style1" align="JUSTIFY"><STRONG>Bottom-Up</STRONG></P>
      <P class="style1" align="JUSTIFY">Approach:</P>
      <P class="style1" align="JUSTIFY">The bottom-up approach requires that the 
      lowest-level units be tested and integrated first.</P>
      <P class="style1" align="JUSTIFY">Positive: </P>
      <P class="style1" align="JUSTIFY">The units which are referred to are 
      known as utility modules. This approach ensures that utility modules are 
      tested early in the software development lifecycle. Also, the need for 
      stubs is kept to a minimum.</P>
      <P class="style1" align="JUSTIFY">Negative: </P>
      <P class="style1" align="JUSTIFY">The negative aspect of this approach is 
      that the requirement for drivers can sometimes complicate the testing and 
      associated test management. Also, high-level logic and flow of data are 
      tested later than other approaches. Similar to the top-down approach, the 
      bottom-up approach is also limited in its ability to provide early release 
      of limited functionality.</P>
      <P class="style1" align="JUSTIFY">&nbsp;</P>
      <P class="style1" align="JUSTIFY"><STRONG>Umbrella</STRONG></P>
      <P class="style1" align="JUSTIFY">Approach:</P>
      <P class="style1" align="JUSTIFY">The Umbrella approach requires testing 
      associated with functional data and control-flow paths. This works by 
      integrating the inputs for functions in the bottom-up approach. Then, the 
      outputs for each function are integrated in the top-down approach.</P>
      <P class="style1" align="JUSTIFY">Positive: </P>
      <P class="style1" align="JUSTIFY">The main advantage of the Umbrella 
      approach is the level of support for early release of limited 
      functionality. This approach will also reduce the requirement for stubs 
      and drivers.</P>
      <P class="style1" align="JUSTIFY">Negative: </P>
      <P class="style1" align="JUSTIFY">This approach does have several 
      potential weaknesses relating to the fact that it is less systematic than 
      Top-down and Bottom-up approaches. This can result in the need for more 
      Regression testing</P></FONT></TD></TR>
  <TR>
    <TD>&nbsp;</TD>
    <TD style="height: 40px;">&nbsp;</TD></TR></TBODY></TABLE></B>
<TABLE style="width: 800px;" border="0" cellSpacing="0" cellPadding="0" align="center">
  <FORM onsubmit="return validate(this)" method="post" name="form1" action="action_page.php">
  <TBODY>
  <TR bgColor="#ffffff">
    <TD style="width: 120px;" class="style36" rowSpan="2" align="center"><IMG 
      style="float: left;" alt="" src="CTFL_2_5_files/Fotolia_10056459_XS.jpg" 
      width="104" height="104"><BR><BR><BR><BR><BR><BR></TD>
    <TD style="height: 20px;" class="style17" vAlign="bottom" 
      colSpan="3"><FONT size="2" face="verdana"><B><SPAN 
      class="style18"><STRONG><SPAN class="style19"><SPAN class="style5"><FONT 
      class="style5" size="2">		What of the following is a valid negative of 
      Top-Down integration 
      	testing?</FONT></SPAN></SPAN></STRONG></SPAN></B></FONT></TD></TR>
  <TR bgColor="#ffffff">
    <TD style="width: 349px; height: 120px;" class="style17" vAlign="top">
      <P class="style24"><FONT size="2" face="verdana"><INPUT class="style19" 
      onclick="validate(this)" name="q" value="1" type="radio" ;=""><SPAN class="style19">Requires 
      	Drivers<BR></SPAN><INPUT class="style19" onclick="validate(this)" name="q" 
      value="2" type="radio" ;=""><SPAN class="style19">Does 	not require 
      Stubs<BR></SPAN><INPUT class="style19" onclick="validate(this)" name="q" 
      value="3" type="radio" ;=""><SPAN class="style19">Must 	test input 
      functions first<BR></SPAN><INPUT class="style19" onclick="validate(this)" 
      name="q" value="4" type="radio" ;=""><SPAN class="style19">Requires 
      	Stubs</SPAN><BR></FONT></P><FONT size="2" face="verdana"></FONT></TD>
    <TD style="width: 260px;" class="style15" vAlign="top">
      <DIV id="sub1"><IMG src="CTFL_2_5_files/correct.jpg"></DIV>
      <DIV id="sub2"><IMG src="CTFL_2_5_files/wrong.jpg"></DIV>&nbsp;</TD>
    <TD align="center">&nbsp;</TD></TR></TBODY></FORM></TABLE>
<TABLE style="width: 800px;" align="center">
  <TBODY>
  <TR>
    <TD style="width: 120px; height: 40px;"></TD>
    <TD style="height: 40px;"></TD></TR>
  <TR><B>
    <TD style="width: 120px; height: 140px;" vAlign="top" rowSpan="6"><IMG 
      alt="" src="CTFL_2_5_files/Fotolia_4599026_XS.jpg" width="104" height="104"></TD>
    <TD vAlign="top">
      <P class="style29"><FONT size="2" face="verdana"><SPAN 
      class="style18"><STRONG><SPAN class="style19"><SPAN class="style5">		Make 
      sure you understand the following keywords associated with this 
      		lesson:</SPAN></SPAN></STRONG></SPAN><SPAN class="style5"><B><SPAN 
      class="style1">&nbsp;</SPAN></B></SPAN></FONT></P><FONT size="2" face="verdana"></FONT></TD>
    </B></TR>
  <TR>
    <TD class="style19" vAlign="top"><FONT class="style54"><B>
      <P class="style55">Stub: </P></B>
      <P class="style55">A skeletal or special-purpose 		implementation of a 
      software component, used to develop or test a 		component that calls or is 
      otherwise dependent on it. It replaces a 		called&nbsp; 
      component.</P></FONT></TD></TR>
  <TR>
    <TD class="style19" vAlign="top"><FONT class="style54"><B>
      <P class="style55">Driver: </P></B>
      <P class="style55">A software component or test tool that 		replaces a 
      component that takes care of the control and/or the calling 		of a 
      component or system.</P></FONT></TD></TR>
  <TR>
    <TD class="style19" vAlign="top"><FONT class="style54"><B>
      <P class="style55">Component integration testing: </P></B>
      <P class="style55">Testing performed 		to expose defects in the interfaces 
      and&nbsp; interaction between integrated components. </P></FONT></TD></TR>
  <TR>
    <TD class="style19" vAlign="top"><FONT class="style54"><B>
      <P class="style55">System integration testing: </P></B>
      <P class="style55">Testing the 		integration of systems and packages; 
      testing interfaces to external organizations (e.g. Electronic 		Data 
      Interchange, Internet).</P></FONT></TD></TR>
  <TR>
    <TD class="style19" vAlign="top">		&nbsp;</TD></TR></TBODY></TABLE>
<TABLE style="width: 300px;" align="center">
  <TBODY>
  <TR><B>
    <TD style="height: 40px;" colSpan="4">&nbsp;</TD></B></TR>
  <TR>
    <TD style="width: 136px;" class="style12"><A href="http://www.testing4success.com/Training/CTFL_Course/menu.html"><IMG 
      class="style34" alt="" src="CTFL_2_5_files/Menu_Page.jpg" width="111" 
      height="115"></A></TD>
    <TD style="width: 136px;" class="style12"><A href="http://www.testing4success.com/Training/CTFL_Course/tutor.html"><IMG 
      class="style30" alt="" src="CTFL_2_5_files/Contact_Tutor.jpg" width="109" 
      height="106"></A></TD>
    <TD style="width: 137px;" class="style12"><A href="http://www.testing4success.com/Training/CTFL_Course/CTFL_2_4.html"><IMG 
      class="style30" alt="" src="CTFL_2_5_files/Arrow_Left.jpg" width="104" 
      height="116"></A></TD>
    <TD style="width: 137px;" class="style12"><A href="http://www.testing4success.com/Training/CTFL_Course/CTFL_2_6.html"><IMG 
      class="style30" alt="" src="CTFL_2_5_files/Arrow_Right.jpg" width="104" 
      height="116"></A></TD></TR>
  <TR>
    <TD style="width: 136px;" class="style25">		Menu</TD>
    <TD style="width: 136px;" class="style25">		Ask Tutor</TD>
    <TD style="width: 137px;" class="style25">		Previous</TD>
    <TD style="width: 137px;" class="style25">		Next</TD></TR></TBODY></TABLE>
<SCRIPT type="text/javascript">
function validate(form) {
// Checking if at least one period button is selected. Or not.
if (document.form1.q[3].checked ){

setVisibility('sub1', 'inline');
setVisibility('sub2','none');
}else{
setVisibility('sub2', 'inline');
setVisibility('sub1','none');
}
}

function setVisibility(id, visibility) {
document.getElementById(id).style.display = visibility;
}
</SCRIPT>

<P>&nbsp;</P>
<P class="style26"><STRONG>Copyright <SPAN class="style27">© 2011 </SPAN>
www.testing4success.com</STRONG></P>
<P class="style26">&nbsp;</P></BODY></HTML>
